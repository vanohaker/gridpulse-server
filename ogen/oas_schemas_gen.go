// Code generated by ogen, DO NOT EDIT.

package ogen

// Ref: #/components/schemas/AcessDenied
type AcessDenied struct {
	Data Data `json:"data"`
}

// GetData returns the value of Data.
func (s *AcessDenied) GetData() Data {
	return s.Data
}

// SetData sets the value of Data.
func (s *AcessDenied) SetData(val Data) {
	s.Data = val
}

func (*AcessDenied) userRegisterV1Res() {}

type AddOAuthProviderV1Forbidden struct {
	Data Data `json:"data"`
}

// GetData returns the value of Data.
func (s *AddOAuthProviderV1Forbidden) GetData() Data {
	return s.Data
}

// SetData sets the value of Data.
func (s *AddOAuthProviderV1Forbidden) SetData(val Data) {
	s.Data = val
}

type AddOAuthProviderV1Req struct{}

type BearerAuth struct {
	Token string
	Roles []string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// GetRoles returns the value of Roles.
func (s *BearerAuth) GetRoles() []string {
	return s.Roles
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// SetRoles sets the value of Roles.
func (s *BearerAuth) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/data
type Data struct {
	Msg string `json:"msg"`
}

// GetMsg returns the value of Msg.
func (s *Data) GetMsg() string {
	return s.Msg
}

// SetMsg sets the value of Msg.
func (s *Data) SetMsg(val string) {
	s.Msg = val
}

// Ref: #/components/schemas/deviceAdd
type DeviceAdd struct {
	UUID string `json:"uuid"`
}

// GetUUID returns the value of UUID.
func (s *DeviceAdd) GetUUID() string {
	return s.UUID
}

// SetUUID sets the value of UUID.
func (s *DeviceAdd) SetUUID(val string) {
	s.UUID = val
}

// DeviceAddStatusCode wraps DeviceAdd with StatusCode.
type DeviceAddStatusCode struct {
	StatusCode int
	Response   DeviceAdd
}

// GetStatusCode returns the value of StatusCode.
func (s *DeviceAddStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *DeviceAddStatusCode) GetResponse() DeviceAdd {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *DeviceAddStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *DeviceAddStatusCode) SetResponse(val DeviceAdd) {
	s.Response = val
}

type DeviceAddV1Req struct {
	Name string    `json:"name"`
	Type OptString `json:"type"`
}

// GetName returns the value of Name.
func (s *DeviceAddV1Req) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *DeviceAddV1Req) GetType() OptString {
	return s.Type
}

// SetName sets the value of Name.
func (s *DeviceAddV1Req) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *DeviceAddV1Req) SetType(val OptString) {
	s.Type = val
}

// Ref: #/components/schemas/InternalServerError
type InternalServerError struct {
	Data Data `json:"data"`
}

// GetData returns the value of Data.
func (s *InternalServerError) GetData() Data {
	return s.Data
}

// SetData sets the value of Data.
func (s *InternalServerError) SetData(val Data) {
	s.Data = val
}

func (*InternalServerError) loginUserV1Res()    {}
func (*InternalServerError) userRegisterV1Res() {}

// Ref: #/components/schemas/livenesProbe
type LivenesProbe struct {
	Data LivenesProbeData `json:"data"`
}

// GetData returns the value of Data.
func (s *LivenesProbe) GetData() LivenesProbeData {
	return s.Data
}

// SetData sets the value of Data.
func (s *LivenesProbe) SetData(val LivenesProbeData) {
	s.Data = val
}

type LivenesProbeData struct {
	Postgres string `json:"postgres"`
	Redis    string `json:"redis"`
}

// GetPostgres returns the value of Postgres.
func (s *LivenesProbeData) GetPostgres() string {
	return s.Postgres
}

// GetRedis returns the value of Redis.
func (s *LivenesProbeData) GetRedis() string {
	return s.Redis
}

// SetPostgres sets the value of Postgres.
func (s *LivenesProbeData) SetPostgres(val string) {
	s.Postgres = val
}

// SetRedis sets the value of Redis.
func (s *LivenesProbeData) SetRedis(val string) {
	s.Redis = val
}

// LivenesProbeStatusCode wraps LivenesProbe with StatusCode.
type LivenesProbeStatusCode struct {
	StatusCode int
	Response   LivenesProbe
}

// GetStatusCode returns the value of StatusCode.
func (s *LivenesProbeStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *LivenesProbeStatusCode) GetResponse() LivenesProbe {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *LivenesProbeStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *LivenesProbeStatusCode) SetResponse(val LivenesProbe) {
	s.Response = val
}

// Ref: #/components/schemas/LoginSucess
type LoginSucess struct {
	Data UserAuthData `json:"data"`
}

// GetData returns the value of Data.
func (s *LoginSucess) GetData() UserAuthData {
	return s.Data
}

// SetData sets the value of Data.
func (s *LoginSucess) SetData(val UserAuthData) {
	s.Data = val
}

func (*LoginSucess) loginUserV1Res() {}

type LoginUserV1Req struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *LoginUserV1Req) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *LoginUserV1Req) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *LoginUserV1Req) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *LoginUserV1Req) SetPassword(val string) {
	s.Password = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/RegisterNewUser
type RegisterNewUser struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Accept   bool   `json:"accept"`
}

// GetUsername returns the value of Username.
func (s *RegisterNewUser) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *RegisterNewUser) GetPassword() string {
	return s.Password
}

// GetEmail returns the value of Email.
func (s *RegisterNewUser) GetEmail() string {
	return s.Email
}

// GetAccept returns the value of Accept.
func (s *RegisterNewUser) GetAccept() bool {
	return s.Accept
}

// SetUsername sets the value of Username.
func (s *RegisterNewUser) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *RegisterNewUser) SetPassword(val string) {
	s.Password = val
}

// SetEmail sets the value of Email.
func (s *RegisterNewUser) SetEmail(val string) {
	s.Email = val
}

// SetAccept sets the value of Accept.
func (s *RegisterNewUser) SetAccept(val bool) {
	s.Accept = val
}

// Ref: #/components/schemas/RegisterNewUserSucess
type RegisterNewUserSucess struct {
	Data UserAuthData `json:"data"`
}

// GetData returns the value of Data.
func (s *RegisterNewUserSucess) GetData() UserAuthData {
	return s.Data
}

// SetData sets the value of Data.
func (s *RegisterNewUserSucess) SetData(val UserAuthData) {
	s.Data = val
}

func (*RegisterNewUserSucess) userRegisterV1Res() {}

// Ref: #/components/schemas/UserAuthData
type UserAuthData struct {
	Acesstoken   string   `json:"acesstoken"`
	Refreshtoken string   `json:"refreshtoken"`
	Userdata     UserData `json:"userdata"`
}

// GetAcesstoken returns the value of Acesstoken.
func (s *UserAuthData) GetAcesstoken() string {
	return s.Acesstoken
}

// GetRefreshtoken returns the value of Refreshtoken.
func (s *UserAuthData) GetRefreshtoken() string {
	return s.Refreshtoken
}

// GetUserdata returns the value of Userdata.
func (s *UserAuthData) GetUserdata() UserData {
	return s.Userdata
}

// SetAcesstoken sets the value of Acesstoken.
func (s *UserAuthData) SetAcesstoken(val string) {
	s.Acesstoken = val
}

// SetRefreshtoken sets the value of Refreshtoken.
func (s *UserAuthData) SetRefreshtoken(val string) {
	s.Refreshtoken = val
}

// SetUserdata sets the value of Userdata.
func (s *UserAuthData) SetUserdata(val UserData) {
	s.Userdata = val
}

// Ref: #/components/schemas/UserData
type UserData struct {
	Username string `json:"username"`
	Email    string `json:"email"`
}

// GetUsername returns the value of Username.
func (s *UserData) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *UserData) GetEmail() string {
	return s.Email
}

// SetUsername sets the value of Username.
func (s *UserData) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *UserData) SetEmail(val string) {
	s.Email = val
}
